// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateBanner implements createBanner operation.
//
// Создание баннера происходит в транзакции с уровнем
// изоляции ReadCommitted. Доступно только админам.
//
// POST /banner
func (UnimplementedHandler) CreateBanner(ctx context.Context, req *CreateBannerRequest) (r CreateBannerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteBanner implements deleteBanner operation.
//
// Удаление баннера по его идентификатору. Доступно
// только админам.
//
// DELETE /banner/{id}
func (UnimplementedHandler) DeleteBanner(ctx context.Context, params DeleteBannerParams) (r DeleteBannerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetBanner implements getBanner operation.
//
// Получение баннера для пользователя в виде чистого JSON,
// который находится по feature_id и tag_id.  По умолчанию из
// базы возвращается самая последняя версия.  При
// использовании флага use_last_revision данные баннера
// возвращаются из резидентной БД.
//
// GET /user_banner
func (UnimplementedHandler) GetBanner(ctx context.Context, params GetBannerParams) (r GetBannerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetBanners implements getBanners operation.
//
// Получение данных о баннерах для админов c фильтрацией
// по фиче и/или тегу и возможностью ограничить
// количество баннеров.  По умолчанию количество
// возвращаемых баннеров ограничено 1000, сдвиг по
// умолчанию равен 0. Доступно только админам.
//
// GET /banner
func (UnimplementedHandler) GetBanners(ctx context.Context, params GetBannersParams) (r GetBannersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SetBanner implements setBanner operation.
//
// Обновление баннера, поля тела запроса опциональны.
// При обновлении создается новая версия и изменяются
// прежние. Доступно только админам.
//
// PATCH /banner/{id}
func (UnimplementedHandler) SetBanner(ctx context.Context, req *SetBannerRequest, params SetBannerParams) (r SetBannerRes, _ error) {
	return r, ht.ErrNotImplemented
}
