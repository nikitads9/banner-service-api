// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/jx"
)

type AdminToken struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *AdminToken) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *AdminToken) SetAPIKey(val string) {
	s.APIKey = val
}

type CreateBannerBadRequest Error

func (*CreateBannerBadRequest) createBannerRes() {}

// CreateBannerForbidden is response for CreateBanner operation.
type CreateBannerForbidden struct{}

func (*CreateBannerForbidden) createBannerRes() {}

type CreateBannerInternalServerError Error

func (*CreateBannerInternalServerError) createBannerRes() {}

// Ref: #/components/schemas/CreateBannerRequest
type CreateBannerRequest struct {
	// Идентификаторы тэгов.
	TagIds []int `json:"tag_ids"`
	// Идентификатор фичи.
	FeatureID OptInt `json:"feature_id"`
	// Содержимое баннера.
	Content OptCreateBannerRequestContent `json:"content"`
	// Флаг активности баннера.
	IsActive OptBool `json:"is_active"`
}

// GetTagIds returns the value of TagIds.
func (s *CreateBannerRequest) GetTagIds() []int {
	return s.TagIds
}

// GetFeatureID returns the value of FeatureID.
func (s *CreateBannerRequest) GetFeatureID() OptInt {
	return s.FeatureID
}

// GetContent returns the value of Content.
func (s *CreateBannerRequest) GetContent() OptCreateBannerRequestContent {
	return s.Content
}

// GetIsActive returns the value of IsActive.
func (s *CreateBannerRequest) GetIsActive() OptBool {
	return s.IsActive
}

// SetTagIds sets the value of TagIds.
func (s *CreateBannerRequest) SetTagIds(val []int) {
	s.TagIds = val
}

// SetFeatureID sets the value of FeatureID.
func (s *CreateBannerRequest) SetFeatureID(val OptInt) {
	s.FeatureID = val
}

// SetContent sets the value of Content.
func (s *CreateBannerRequest) SetContent(val OptCreateBannerRequestContent) {
	s.Content = val
}

// SetIsActive sets the value of IsActive.
func (s *CreateBannerRequest) SetIsActive(val OptBool) {
	s.IsActive = val
}

// Содержимое баннера.
type CreateBannerRequestContent map[string]jx.Raw

func (s *CreateBannerRequestContent) init() CreateBannerRequestContent {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/CreateBannerResponse
type CreateBannerResponse struct {
	// Идентификатор созданного баннера.
	BannerID OptInt `json:"banner_id"`
}

// GetBannerID returns the value of BannerID.
func (s *CreateBannerResponse) GetBannerID() OptInt {
	return s.BannerID
}

// SetBannerID sets the value of BannerID.
func (s *CreateBannerResponse) SetBannerID(val OptInt) {
	s.BannerID = val
}

func (*CreateBannerResponse) createBannerRes() {}

// CreateBannerUnauthorized is response for CreateBanner operation.
type CreateBannerUnauthorized struct{}

func (*CreateBannerUnauthorized) createBannerRes() {}

type DeleteBannerBadRequest Error

func (*DeleteBannerBadRequest) deleteBannerRes() {}

// DeleteBannerForbidden is response for DeleteBanner operation.
type DeleteBannerForbidden struct{}

func (*DeleteBannerForbidden) deleteBannerRes() {}

type DeleteBannerInternalServerError Error

func (*DeleteBannerInternalServerError) deleteBannerRes() {}

// DeleteBannerNoContent is response for DeleteBanner operation.
type DeleteBannerNoContent struct{}

func (*DeleteBannerNoContent) deleteBannerRes() {}

// DeleteBannerNotFound is response for DeleteBanner operation.
type DeleteBannerNotFound struct{}

func (*DeleteBannerNotFound) deleteBannerRes() {}

// DeleteBannerUnauthorized is response for DeleteBanner operation.
type DeleteBannerUnauthorized struct{}

func (*DeleteBannerUnauthorized) deleteBannerRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *Error) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *Error) SetError(val OptString) {
	s.Error = val
}

func (*Error) getBannersRes() {}

type GetBannerBadRequest Error

func (*GetBannerBadRequest) getBannerRes() {}

// GetBannerForbidden is response for GetBanner operation.
type GetBannerForbidden struct{}

func (*GetBannerForbidden) getBannerRes() {}

type GetBannerInternalServerError Error

func (*GetBannerInternalServerError) getBannerRes() {}

// GetBannerNotFound is response for GetBanner operation.
type GetBannerNotFound struct{}

func (*GetBannerNotFound) getBannerRes() {}

// Ref: #/components/schemas/GetBannerResponse
type GetBannerResponse map[string]jx.Raw

func (s *GetBannerResponse) init() GetBannerResponse {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

func (*GetBannerResponse) getBannerRes() {}

// GetBannerUnauthorized is response for GetBanner operation.
type GetBannerUnauthorized struct{}

func (*GetBannerUnauthorized) getBannerRes() {}

// GetBannersForbidden is response for GetBanners operation.
type GetBannersForbidden struct{}

func (*GetBannersForbidden) getBannersRes() {}

type GetBannersResponse []GetBannersResponseItem

func (*GetBannersResponse) getBannersRes() {}

type GetBannersResponseItem struct {
	// Идентификатор баннера.
	BannerID OptInt `json:"banner_id"`
	// Идентификаторы тэгов.
	TagIds []int `json:"tag_ids"`
	// Идентификатор фичи.
	FeatureID OptInt `json:"feature_id"`
	// Содержимое баннера.
	Content OptGetBannersResponseItemContent `json:"content"`
	// Флаг активности баннера.
	IsActive OptBool `json:"is_active"`
	// Дата создания баннера.
	CreatedAt OptDateTime `json:"created_at"`
	// Дата обновления баннера.
	UpdatedAt OptDateTime `json:"updated_at"`
}

// GetBannerID returns the value of BannerID.
func (s *GetBannersResponseItem) GetBannerID() OptInt {
	return s.BannerID
}

// GetTagIds returns the value of TagIds.
func (s *GetBannersResponseItem) GetTagIds() []int {
	return s.TagIds
}

// GetFeatureID returns the value of FeatureID.
func (s *GetBannersResponseItem) GetFeatureID() OptInt {
	return s.FeatureID
}

// GetContent returns the value of Content.
func (s *GetBannersResponseItem) GetContent() OptGetBannersResponseItemContent {
	return s.Content
}

// GetIsActive returns the value of IsActive.
func (s *GetBannersResponseItem) GetIsActive() OptBool {
	return s.IsActive
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetBannersResponseItem) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetBannersResponseItem) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetBannerID sets the value of BannerID.
func (s *GetBannersResponseItem) SetBannerID(val OptInt) {
	s.BannerID = val
}

// SetTagIds sets the value of TagIds.
func (s *GetBannersResponseItem) SetTagIds(val []int) {
	s.TagIds = val
}

// SetFeatureID sets the value of FeatureID.
func (s *GetBannersResponseItem) SetFeatureID(val OptInt) {
	s.FeatureID = val
}

// SetContent sets the value of Content.
func (s *GetBannersResponseItem) SetContent(val OptGetBannersResponseItemContent) {
	s.Content = val
}

// SetIsActive sets the value of IsActive.
func (s *GetBannersResponseItem) SetIsActive(val OptBool) {
	s.IsActive = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetBannersResponseItem) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetBannersResponseItem) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Содержимое баннера.
type GetBannersResponseItemContent map[string]jx.Raw

func (s *GetBannersResponseItemContent) init() GetBannersResponseItemContent {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// GetBannersUnauthorized is response for GetBanners operation.
type GetBannersUnauthorized struct{}

func (*GetBannersUnauthorized) getBannersRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateBannerRequestContent returns new OptCreateBannerRequestContent with value set to v.
func NewOptCreateBannerRequestContent(v CreateBannerRequestContent) OptCreateBannerRequestContent {
	return OptCreateBannerRequestContent{
		Value: v,
		Set:   true,
	}
}

// OptCreateBannerRequestContent is optional CreateBannerRequestContent.
type OptCreateBannerRequestContent struct {
	Value CreateBannerRequestContent
	Set   bool
}

// IsSet returns true if OptCreateBannerRequestContent was set.
func (o OptCreateBannerRequestContent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateBannerRequestContent) Reset() {
	var v CreateBannerRequestContent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateBannerRequestContent) SetTo(v CreateBannerRequestContent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateBannerRequestContent) Get() (v CreateBannerRequestContent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateBannerRequestContent) Or(d CreateBannerRequestContent) CreateBannerRequestContent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetBannersResponseItemContent returns new OptGetBannersResponseItemContent with value set to v.
func NewOptGetBannersResponseItemContent(v GetBannersResponseItemContent) OptGetBannersResponseItemContent {
	return OptGetBannersResponseItemContent{
		Value: v,
		Set:   true,
	}
}

// OptGetBannersResponseItemContent is optional GetBannersResponseItemContent.
type OptGetBannersResponseItemContent struct {
	Value GetBannersResponseItemContent
	Set   bool
}

// IsSet returns true if OptGetBannersResponseItemContent was set.
func (o OptGetBannersResponseItemContent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetBannersResponseItemContent) Reset() {
	var v GetBannersResponseItemContent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetBannersResponseItemContent) SetTo(v GetBannersResponseItemContent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetBannersResponseItemContent) Get() (v GetBannersResponseItemContent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetBannersResponseItemContent) Or(d GetBannersResponseItemContent) GetBannersResponseItemContent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilIntArray returns new OptNilIntArray with value set to v.
func NewOptNilIntArray(v []int) OptNilIntArray {
	return OptNilIntArray{
		Value: v,
		Set:   true,
	}
}

// OptNilIntArray is optional nullable []int.
type OptNilIntArray struct {
	Value []int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilIntArray was set.
func (o OptNilIntArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilIntArray) Reset() {
	var v []int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilIntArray) SetTo(v []int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilIntArray) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilIntArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilIntArray) Get() (v []int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilIntArray) Or(d []int) []int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSetBannerRequestContent returns new OptNilSetBannerRequestContent with value set to v.
func NewOptNilSetBannerRequestContent(v SetBannerRequestContent) OptNilSetBannerRequestContent {
	return OptNilSetBannerRequestContent{
		Value: v,
		Set:   true,
	}
}

// OptNilSetBannerRequestContent is optional nullable SetBannerRequestContent.
type OptNilSetBannerRequestContent struct {
	Value SetBannerRequestContent
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSetBannerRequestContent was set.
func (o OptNilSetBannerRequestContent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSetBannerRequestContent) Reset() {
	var v SetBannerRequestContent
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSetBannerRequestContent) SetTo(v SetBannerRequestContent) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSetBannerRequestContent) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSetBannerRequestContent) SetToNull() {
	o.Set = true
	o.Null = true
	var v SetBannerRequestContent
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSetBannerRequestContent) Get() (v SetBannerRequestContent, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSetBannerRequestContent) Or(d SetBannerRequestContent) SetBannerRequestContent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type SetBannerBadRequest Error

func (*SetBannerBadRequest) setBannerRes() {}

// SetBannerForbidden is response for SetBanner operation.
type SetBannerForbidden struct{}

func (*SetBannerForbidden) setBannerRes() {}

type SetBannerInternalServerError Error

func (*SetBannerInternalServerError) setBannerRes() {}

// SetBannerNotFound is response for SetBanner operation.
type SetBannerNotFound struct{}

func (*SetBannerNotFound) setBannerRes() {}

// SetBannerOK is response for SetBanner operation.
type SetBannerOK struct{}

func (*SetBannerOK) setBannerRes() {}

// Ref: #/components/schemas/SetBannerRequest
type SetBannerRequest struct {
	// Идентификаторы тэгов.
	TagIds OptNilIntArray `json:"tag_ids"`
	// Идентификатор фичи.
	FeatureID OptNilInt `json:"feature_id"`
	// Содержимое баннера.
	Content OptNilSetBannerRequestContent `json:"content"`
	// Флаг активности баннера.
	IsActive OptNilBool `json:"is_active"`
}

// GetTagIds returns the value of TagIds.
func (s *SetBannerRequest) GetTagIds() OptNilIntArray {
	return s.TagIds
}

// GetFeatureID returns the value of FeatureID.
func (s *SetBannerRequest) GetFeatureID() OptNilInt {
	return s.FeatureID
}

// GetContent returns the value of Content.
func (s *SetBannerRequest) GetContent() OptNilSetBannerRequestContent {
	return s.Content
}

// GetIsActive returns the value of IsActive.
func (s *SetBannerRequest) GetIsActive() OptNilBool {
	return s.IsActive
}

// SetTagIds sets the value of TagIds.
func (s *SetBannerRequest) SetTagIds(val OptNilIntArray) {
	s.TagIds = val
}

// SetFeatureID sets the value of FeatureID.
func (s *SetBannerRequest) SetFeatureID(val OptNilInt) {
	s.FeatureID = val
}

// SetContent sets the value of Content.
func (s *SetBannerRequest) SetContent(val OptNilSetBannerRequestContent) {
	s.Content = val
}

// SetIsActive sets the value of IsActive.
func (s *SetBannerRequest) SetIsActive(val OptNilBool) {
	s.IsActive = val
}

// Содержимое баннера.
type SetBannerRequestContent map[string]jx.Raw

func (s *SetBannerRequestContent) init() SetBannerRequestContent {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// SetBannerUnauthorized is response for SetBanner operation.
type SetBannerUnauthorized struct{}

func (*SetBannerUnauthorized) setBannerRes() {}

type UserToken struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *UserToken) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *UserToken) SetAPIKey(val string) {
	s.APIKey = val
}
