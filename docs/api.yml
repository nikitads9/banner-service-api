openapi: 3.0.0
info:
  title: Сервис баннеров
  description: Взаимодействие с пользовательскими баннерами.
  contact:
    name: Nikita Denisenok
    url: https://vk.com/ndenisenok
  version: 1.0.0
tags:
- name: user-banners
  description: "действия с баннерами для пользователя"
- name: admin-banners
  description: "действия с баннерами, доступные админу"
servers:
- url: http://localhost:3000
paths:
  /user_banner:
    get:
      tags:
        - user-banners
      summary: Получение баннера для пользователя
      description: "Получение баннера для пользователя в виде чистого JSON, который находится по feature_id и tag_id. \
      \ По умолчанию из базы возвращается самая последняя версия. \
      \ При использовании флага use_last_revision данные баннера возвращаются из резидентной БД."
      operationId: getBanner
      parameters:
        - in: query
          name: tag_id
          required: true
          schema:
            type: integer
            format: int64
            description: Тэг пользователя
        - in: query
          name: feature_id
          required: true
          schema:
            type: integer
            format: int64
            description: Идентификатор фичи
        - in: query
          name: use_last_revision
          required: false
          schema:
            type: boolean
            default: false
            description: Получать актуальную информацию 
      responses:
        '200':
          description: Баннер пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBannerResponse'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '404':
          description: Баннер для не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /banner:
    get:
      tags:
        - admin-banners
      summary: Получение всех баннеров c фильтрацией по фиче и/или тегу 
      description: "Получение данных о баннерах для админов c фильтрацией по фиче и/или тегу и возможностью ограничить количество баннеров. \
      \ По умолчанию количество возвращаемых баннеров ограничено 1000, сдвиг по умолчанию равен 0. Доступно только админам."
      operationId: getBanners
      parameters:
        - in: query
          name: feature_id
          required: false
          schema:
            type: integer
            format: int64
            description: Идентификатор фичи
        - in: query
          name: tag_id
          required: false
          schema:
            type: integer
            format: int64
            description: Идентификатор тега
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            description: Лимит 
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            description: Оффсет 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBannersResponse'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
    post:
      tags:
        - admin-banners
      summary: Создание нового баннера
      description: "Создание баннера происходит в транзакции с уровнем изоляции ReadCommitted. Доступно только админам."
      operationId: createBanner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBannerRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBannerResponse'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /banner/{id}:
    patch:
      tags:
        - admin-banners
      summary: Обновление содержимого баннера
      description: "Обновление баннера, поля тела запроса опциональны. При обновлении создается новая версия и изменяются прежние. Доступно только админам."
      operationId: setBanner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            description: Идентификатор баннера
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetBannerRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '404':
          description: Баннер не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
    delete:
      tags:
        - admin-banners
      summary: Удаление баннера по идентификатору
      description: "Удаление баннера по его идентификатору. Доступно только админам."
      operationId: deleteBanner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            description: Идентификатор баннера
      responses:
        '204':
          description: Баннер успешно удален
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет доступа
        '404':
          description: Баннер для тэга не найден
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
components:  
  schemas:
    Error:
      type: object
      required:
      - error
      properties:
        error:
          type: string
    CreateBannerRequest:
      required:
      - tag_ids
      - feature_id
      - content
      - is_active
      type: object
      properties:
        tag_ids:
          type: array
          description: Идентификаторы тэгов
          items:
            type: integer
            format: int64
        feature_id:
          type: integer
          format: int64
          description: Идентификатор фичи
        content:
          #type: object
          description: Содержимое баннера
          #additionalProperties: true
          example: {"title": "some_title", "text": "some_text", "url": "some_url"}
        is_active:
          type: boolean
          description: Флаг активности баннера
    CreateBannerResponse:
      type: object
      required: 
      - banner_id
      properties:
        banner_id:
          type: integer
          format: int64
          description: Идентификатор созданного баннера
    GetBannerResponse:
      #type: object
      #additionalProperties: true
      example: {"title": "some_title", "text": "some_text", "url": "some_url"}
    GetBannersResponse:
      type: array
      items:
        type: object
        required: 
        - banner_id
        - tag_ids
        - feature_id
        - content
        - is_active
        - created_at
        properties:
          banner_id:
            type: integer
            format: int64
            description: Идентификатор баннера
          tag_ids:
            type: array
            description: Идентификаторы тэгов
            items:
              type: integer
              format: int64
          feature_id:
            type: integer
            format: int64
            description: Идентификатор фичи
          content:
            #type: object
            description: Содержимое баннера
            #additionalProperties: true
            example: {"title": "some_title", "text": "some_text", "url": "some_url"}
          is_active:
            type: boolean
            description: Флаг активности баннера
          created_at:
            type: string
            format: date-time
            description: Дата создания баннера
          updated_at:
            type: string
            format: date-time
            description: Дата обновления баннера
    SetBannerRequest:
            type: object
            properties:
              tag_ids:
                nullable: true
                type: array                    
                description: Идентификаторы тэгов
                items:
                  type: integer
                  format: int64
              feature_id:
                nullable: true
                type: integer
                format: int64
                description: Идентификатор фичи
              content:
                nullable: true
                #type: object
                description: Содержимое баннера
                #additionalProperties: true
                example: {"title": "some_title", "text": "some_text", "url": "some_url"}
              is_active:
                nullable: true
                type: boolean
                description: Флаг активности баннера
  securitySchemes:
    Bearer:
      type: apiKey
      in: header
      name: Token
      description: Токен админа с префиксом `Bearer`, пр. "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTk5ODYyMzUsInNjb3BlIjoiYWRtaW4ifQ.cev1h-ivEbwx3UJDYOoWIAid-gSRuPh5RObOkkuOY2g" и пр. "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTk5ODYyMzUsInNjb3BlIjoidXNlciJ9.vmt-FrTKksPPLAnzvXzj3R7lLcVe06xAEi5s_2NLRVI.
    